{"ast":null,"code":"var _jsxFileName = \"/Users/273488/Workspace/My Repo/Code Reference/React App/src/contentful/FetchContent.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { createClient } from \"contentful\";\nimport debounce from 'lodash.debounce';\nimport Clouds from \"../templates/clouds/Clouds\";\nimport DriftingClouds from \"../templates/clouds/DriftingClouds\";\nimport HeavyRain from \"../templates/rain/HeavyRain\";\nimport SideRain from \"../templates/rain/SideRain\";\nimport SplashRain from \"../templates/rain/SplashRain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SPACE_ID = \"jbuh6ffk2dc1\";\nconst ACCESS_TOKEN = \"vIgkWsaGQS-aMGClV9awdFmf4JM-3NEL9yqennzrHKA\";\nconst client = createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN\n});\nexport default function FetchContent() {\n  _s();\n\n  const [entries, setEntries] = useState([]);\n  const [urls, setURLs] = useState([]);\n  const [url, setURL] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    client.getEntries().then(response => setEntries(response.items)).catch(console.error);\n  }, []);\n  useEffect(() => {\n    console.log(entries);\n    getURL();\n    debouncedCallback();\n  }, [entries]);\n\n  function getURL() {\n    var _entries$, _entries$$fields;\n\n    let img = (_entries$ = entries[0]) === null || _entries$ === void 0 ? void 0 : (_entries$$fields = _entries$.fields) === null || _entries$$fields === void 0 ? void 0 : _entries$$fields.defaultImages;\n\n    if (img) {\n      for (let key in img) {\n        urls.push(img[key].fields.file.url); // setURLs(...urls, img[key].fields.file.url);\n\n        console.log(img[key].fields.file.url);\n      }\n    }\n  }\n\n  const debouncedCallback = setInterval(loadImage, 10000);\n\n  function loadImage() {\n    setURL(urls[index]);\n    let i = index + 1;\n    setIndex(i);\n\n    if (index >= (urls === null || urls === void 0 ? void 0 : urls.length)) {\n      setIndex(0);\n    }\n\n    console.log(index);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DriftingClouds, {\n      url: `https:${url}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FetchContent, \"l0AVXnlv+DgVgVIrzcAdDZvhweQ=\");\n\n_c = FetchContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchContent\");","map":{"version":3,"sources":["/Users/273488/Workspace/My Repo/Code Reference/React App/src/contentful/FetchContent.js"],"names":["useState","useEffect","createClient","debounce","Clouds","DriftingClouds","HeavyRain","SideRain","SplashRain","SPACE_ID","ACCESS_TOKEN","client","space","accessToken","FetchContent","entries","setEntries","urls","setURLs","url","setURL","index","setIndex","getEntries","then","response","items","catch","console","error","log","getURL","debouncedCallback","img","fields","defaultImages","key","push","file","setInterval","loadImage","i","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,QAAQ,GAAG,cAAjB;AAEA,MAAMC,YAAY,GAAG,6CAArB;AAEA,MAAMC,MAAM,GAAGT,YAAY,CAAC;AAC1BU,EAAAA,KAAK,EAAEH,QADmB;AAE1BI,EAAAA,WAAW,EAAEH;AAFa,CAAD,CAA3B;AAKA,eAAe,SAASI,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CACHY,UADH,GAEGC,IAFH,CAESC,QAAD,IAAcT,UAAU,CAACS,QAAQ,CAACC,KAAV,CAFhC,EAGGC,KAHH,CAGSC,OAAO,CAACC,KAHjB;AAID,GALQ,EAKN,EALM,CAAT;AAOA5B,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,OAAO,CAACE,GAAR,CAAYf,OAAZ;AACAgB,IAAAA,MAAM;AACNC,IAAAA,iBAAiB;AAClB,GAJQ,EAIN,CAACjB,OAAD,CAJM,CAAT;;AAMA,WAASgB,MAAT,GAAkB;AAAA;;AAChB,QAAIE,GAAG,gBAAGlB,OAAO,CAAC,CAAD,CAAV,kEAAG,UAAYmB,MAAf,qDAAG,iBAAoBC,aAA9B;;AAEA,QAAIF,GAAJ,EAAS;AACP,WAAK,IAAIG,GAAT,IAAgBH,GAAhB,EAAqB;AACnBhB,QAAAA,IAAI,CAACoB,IAAL,CAAUJ,GAAG,CAACG,GAAD,CAAH,CAASF,MAAT,CAAgBI,IAAhB,CAAqBnB,GAA/B,EADmB,CAEnB;;AACAS,QAAAA,OAAO,CAACE,GAAR,CAAYG,GAAG,CAACG,GAAD,CAAH,CAASF,MAAT,CAAgBI,IAAhB,CAAqBnB,GAAjC;AACD;AACF;AACF;;AACD,QAAMa,iBAAiB,GAAGO,WAAW,CAACC,SAAD,EAAY,KAAZ,CAArC;;AAEA,WAASA,SAAT,GAAqB;AACnBpB,IAAAA,MAAM,CAACH,IAAI,CAACI,KAAD,CAAL,CAAN;AACA,QAAIoB,CAAC,GAACpB,KAAK,GAAC,CAAZ;AACAC,IAAAA,QAAQ,CAACmB,CAAD,CAAR;;AACA,QAAIpB,KAAK,KAAIJ,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEyB,MAAV,CAAT,EAA2B;AACzBpB,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;;AAEDM,IAAAA,OAAO,CAACE,GAAR,CAAYT,KAAZ;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,GAAG,EAAG,SAAQF,GAAI;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAhDuBL,Y;;KAAAA,Y","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { createClient } from \"contentful\";\nimport debounce from 'lodash.debounce';\n\nimport Clouds from \"../templates/clouds/Clouds\";\nimport DriftingClouds from \"../templates/clouds/DriftingClouds\";\nimport HeavyRain from \"../templates/rain/HeavyRain\";\nimport SideRain from \"../templates/rain/SideRain\";\nimport SplashRain from \"../templates/rain/SplashRain\";\n\nconst SPACE_ID = \"jbuh6ffk2dc1\";\n\nconst ACCESS_TOKEN = \"vIgkWsaGQS-aMGClV9awdFmf4JM-3NEL9yqennzrHKA\";\n\nconst client = createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN,\n});\n\nexport default function FetchContent() {\n  const [entries, setEntries] = useState([]);\n  const [urls, setURLs] = useState([]);\n  const [url, setURL] = useState(\"\");\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    client\n      .getEntries()\n      .then((response) => setEntries(response.items))\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    console.log(entries);\n    getURL();\n    debouncedCallback()\n  }, [entries]);\n\n  function getURL() {\n    let img = entries[0]?.fields?.defaultImages;\n\n    if (img) {\n      for (let key in img) {\n        urls.push(img[key].fields.file.url);\n        // setURLs(...urls, img[key].fields.file.url);\n        console.log(img[key].fields.file.url);\n      }\n    }\n  }\n  const debouncedCallback = setInterval(loadImage, 10000);\n  \n  function loadImage() {\n    setURL(urls[index]);\n    let i=index+1;\n    setIndex(i);\n    if (index >= urls?.length) {\n      setIndex(0);\n    }\n    \n    console.log(index);\n  }\n\n  return (\n    <div>\n      <DriftingClouds url={`https:${url}`} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}